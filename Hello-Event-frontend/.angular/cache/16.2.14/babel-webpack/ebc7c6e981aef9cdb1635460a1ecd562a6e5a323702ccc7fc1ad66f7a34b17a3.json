{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/common\";\nfunction AdminDashboardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Nom d'utilisateur : \", ctx_r0.userInfo.username, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"R\\u00F4le : \", ctx_r0.userInfo.role, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Email : \", ctx_r0.userInfo.email, \"\");\n  }\n}\nexport class AdminDashboardComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.users = [];\n  }\n  ngOnInit() {\n    this.loadUsers();\n  }\n  loadUsers() {\n    this.authService.getAllUsers().subscribe(users => {\n      this.users = users;\n    }, error => {\n      console.error('Erreur lors du chargement des utilisateurs', error);\n    });\n  }\n  updateUser(user) {\n    this.authService.updateUser(user).subscribe(updatedUser => {\n      console.log('Utilisateur mis à jour', updatedUser);\n      this.loadUsers(); // Recharger la liste après la mise à jour\n    }, error => {\n      console.error('Erreur lors de la mise à jour de l\\'utilisateur', error);\n    });\n  }\n  deleteUser(id) {\n    this.authService.deleteUser(id).subscribe(() => {\n      console.log('Utilisateur supprimé');\n      this.loadUsers(); // Recharger la liste après la suppression\n    }, error => {\n      console.error('Erreur lors de la suppression de l\\'utilisateur', error);\n    });\n  }\n  static #_ = this.ɵfac = function AdminDashboardComponent_Factory(t) {\n    return new (t || AdminDashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminDashboardComponent,\n    selectors: [[\"app-admin-dashboard\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function AdminDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"admin-dashboard works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Tableau de bord administrateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, AdminDashboardComponent_div_4_Template, 7, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.userInfo);\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","userInfo","username","role","email","AdminDashboardComponent","constructor","authService","users","ngOnInit","loadUsers","getAllUsers","subscribe","error","console","updateUser","user","updatedUser","log","deleteUser","id","_","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","AdminDashboardComponent_Template","rf","ctx","ɵɵtemplate","AdminDashboardComponent_div_4_Template","ɵɵproperty"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\admin-dashboard\\admin-dashboard.component.ts","C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\admin-dashboard\\admin-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  users: any[] = [];\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.authService.getAllUsers().subscribe(\n      users => {\n        this.users = users;\n      },\n      error => {\n        console.error('Erreur lors du chargement des utilisateurs', error);\n      }\n    );\n  }\n\n  updateUser(user: any) {\n    this.authService.updateUser(user).subscribe(\n      updatedUser => {\n        console.log('Utilisateur mis à jour', updatedUser);\n        this.loadUsers(); // Recharger la liste après la mise à jour\n      },\n      error => {\n        console.error('Erreur lors de la mise à jour de l\\'utilisateur', error);\n      }\n    );\n  }\n\n  deleteUser(id: number) {\n    this.authService.deleteUser(id).subscribe(\n      () => {\n        console.log('Utilisateur supprimé');\n        this.loadUsers(); // Recharger la liste après la suppression\n      },\n      error => {\n        console.error('Erreur lors de la suppression de l\\'utilisateur', error);\n      }\n    );\n  }\n}\n","<p>admin-dashboard works!</p>\n<h2>Tableau de bord administrateur</h2>\n<div *ngIf=\"userInfo\">\n  <p>Nom d'utilisateur : {{ userInfo.username }}</p>\n  <p>Rôle : {{ userInfo.role }}</p>\n  <p>Email : {{ userInfo.email }}</p>\n  <!-- Ajoutez d'autres informations selon vos besoins -->\n</div>\n"],"mappings":";;;;;ICEAA,EAAA,CAAAC,cAAA,UAAsB;IACjBD,EAAA,CAAAE,MAAA,GAA2C;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAClDH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACjCH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAA4B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAFhCH,EAAA,CAAAI,SAAA,GAA2C;IAA3CJ,EAAA,CAAAK,kBAAA,yBAAAC,MAAA,CAAAC,QAAA,CAAAC,QAAA,KAA2C;IAC3CR,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,kBAAA,iBAAAC,MAAA,CAAAC,QAAA,CAAAE,IAAA,KAA0B;IAC1BT,EAAA,CAAAI,SAAA,GAA4B;IAA5BJ,EAAA,CAAAK,kBAAA,aAAAC,MAAA,CAAAC,QAAA,CAAAG,KAAA,KAA4B;;;ADGjC,OAAM,MAAOC,uBAAuB;EAGlCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,KAAK,GAAU,EAAE;EAE+B;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACH,WAAW,CAACI,WAAW,EAAE,CAACC,SAAS,CACtCJ,KAAK,IAAG;MACN,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,EACDK,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IACpE,CAAC,CACF;EACH;EAEAE,UAAUA,CAACC,IAAS;IAClB,IAAI,CAACT,WAAW,CAACQ,UAAU,CAACC,IAAI,CAAC,CAACJ,SAAS,CACzCK,WAAW,IAAG;MACZH,OAAO,CAACI,GAAG,CAAC,wBAAwB,EAAED,WAAW,CAAC;MAClD,IAAI,CAACP,SAAS,EAAE,CAAC,CAAC;IACpB,CAAC,EACDG,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACzE,CAAC,CACF;EACH;EAEAM,UAAUA,CAACC,EAAU;IACnB,IAAI,CAACb,WAAW,CAACY,UAAU,CAACC,EAAE,CAAC,CAACR,SAAS,CACvC,MAAK;MACHE,OAAO,CAACI,GAAG,CAAC,sBAAsB,CAAC;MACnC,IAAI,CAACR,SAAS,EAAE,CAAC,CAAC;IACpB,CAAC,EACDG,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACzE,CAAC,CACF;EACH;EAAC,QAAAQ,CAAA,G;qBA1CUhB,uBAAuB,EAAAX,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvBpB,uBAAuB;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRpCtC,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,6BAAsB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC7BH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,qCAA8B;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACvCH,EAAA,CAAAwC,UAAA,IAAAC,sCAAA,iBAKM;;;QALAzC,EAAA,CAAAI,SAAA,GAAc;QAAdJ,EAAA,CAAA0C,UAAA,SAAAH,GAAA,CAAAhC,QAAA,CAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}