{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../event.service\";\nconst _c0 = function (a1) {\n  return [\"/events\", a1];\n};\nfunction HomeComponent_mat_grid_tile_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\")(1, \"mat-card\", 3)(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-subtitle\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"img\", 4);\n    i0.ɵɵelementStart(9, \"mat-card-content\")(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"mat-card-actions\")(13, \"button\", 5);\n    i0.ɵɵtext(14, \"Voir d\\u00E9tails\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 6);\n    i0.ɵɵtext(16, \"R\\u00E9server\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const event_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(event_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 6, event_r1.date, \"dd/MM/yyyy HH:mm\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", event_r1.name);\n    i0.ɵɵproperty(\"src\", event_r1.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(event_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(9, _c0, event_r1.id));\n  }\n}\nexport class HomeComponent {\n  constructor(eventService) {\n    this.eventService = eventService;\n    this.events = [];\n  }\n  ngOnInit() {\n    this.loadEvents();\n  }\n  loadEvents() {\n    this.eventService.getEvents().subscribe(data => {\n      this.events = data;\n    }, error => {\n      console.error('Erreur lors du chargement des événements', error);\n    });\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.EventService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"container\"], [\"cols\", \"3\", \"rowHeight\", \"350px\"], [4, \"ngFor\", \"ngForOf\"], [1, \"event-card\"], [\"mat-card-image\", \"\", 3, \"src\", \"alt\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"routerLink\"], [\"mat-button\", \"\", \"color\", \"accent\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"home works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"h1\");\n        i0.ɵɵtext(4, \"\\u00C9v\\u00E9nements \\u00E0 venir\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-grid-list\", 1);\n        i0.ɵɵtemplate(6, HomeComponent_mat_grid_tile_6_Template, 17, 11, \"mat-grid-tile\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.events);\n      }\n    },\n    styles: [\".container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n\\n.event-card[_ngcontent-%COMP%] {\\n  max-width: 350px;\\n  margin: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuLmV2ZW50LWNhcmQge1xyXG4gIG1heC13aWR0aDogMzUwcHg7XHJcbiAgbWFyZ2luOiAxMHB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","event_r1","name","ɵɵpipeBind2","date","ɵɵpropertyInterpolate","ɵɵproperty","imageUrl","ɵɵsanitizeUrl","description","ɵɵpureFunction1","_c0","id","HomeComponent","constructor","eventService","events","ngOnInit","loadEvents","getEvents","subscribe","data","error","console","_","ɵɵdirectiveInject","i1","EventService","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵtemplate","HomeComponent_mat_grid_tile_6_Template"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\home\\home.component.ts","C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EventService } from '../event.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  events: any[] = [];\n\n  constructor(private eventService: EventService) { }\n\n  ngOnInit(): void {\n    this.loadEvents();\n  }\n\n  loadEvents(): void {\n    this.eventService.getEvents().subscribe(\n      (data) => {\n        this.events = data;\n      },\n      (error) => {\n        console.error('Erreur lors du chargement des événements', error);\n      }\n    );\n  }\n}\n","<p>home works!</p>\n<div class=\"container\">\n  <h1>Événements à venir</h1>\n  <mat-grid-list cols=\"3\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let event of events\">\n      <mat-card class=\"event-card\">\n        <mat-card-header>\n          <mat-card-title>{{event.name}}</mat-card-title>\n          <mat-card-subtitle>{{event.date | date:'dd/MM/yyyy HH:mm'}}</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image [src]=\"event.imageUrl\" alt=\"{{event.name}}\">\n        <mat-card-content>\n          <p>{{event.description}}</p>\n        </mat-card-content>\n        <mat-card-actions>\n          <button mat-button color=\"primary\" [routerLink]=\"['/events', event.id]\">Voir détails</button>\n          <button mat-button color=\"accent\">Réserver</button>\n        </mat-card-actions>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n"],"mappings":";;;;;;;ICIIA,EAAA,CAAAC,cAAA,oBAA4C;IAGtBD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAiB;IAC/CH,EAAA,CAAAC,cAAA,wBAAmB;IAAAD,EAAA,CAAAE,MAAA,GAAwC;;IAAAF,EAAA,CAAAG,YAAA,EAAoB;IAEjFH,EAAA,CAAAI,SAAA,aAAgE;IAChEJ,EAAA,CAAAC,cAAA,uBAAkB;IACbD,EAAA,CAAAE,MAAA,IAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE9BH,EAAA,CAAAC,cAAA,wBAAkB;IACwDD,EAAA,CAAAE,MAAA,yBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAC7FH,EAAA,CAAAC,cAAA,iBAAkC;IAAAD,EAAA,CAAAE,MAAA,qBAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IATnCH,EAAA,CAAAK,SAAA,GAAc;IAAdL,EAAA,CAAAM,iBAAA,CAAAC,QAAA,CAAAC,IAAA,CAAc;IACXR,EAAA,CAAAK,SAAA,GAAwC;IAAxCL,EAAA,CAAAM,iBAAA,CAAAN,EAAA,CAAAS,WAAA,OAAAF,QAAA,CAAAG,IAAA,sBAAwC;IAElBV,EAAA,CAAAK,SAAA,GAAoB;IAApBL,EAAA,CAAAW,qBAAA,QAAAJ,QAAA,CAAAC,IAAA,CAAoB;IAA3CR,EAAA,CAAAY,UAAA,QAAAL,QAAA,CAAAM,QAAA,EAAAb,EAAA,CAAAc,aAAA,CAAsB;IAErCd,EAAA,CAAAK,SAAA,GAAqB;IAArBL,EAAA,CAAAM,iBAAA,CAAAC,QAAA,CAAAQ,WAAA,CAAqB;IAGWf,EAAA,CAAAK,SAAA,GAAoC;IAApCL,EAAA,CAAAY,UAAA,eAAAZ,EAAA,CAAAgB,eAAA,IAAAC,GAAA,EAAAV,QAAA,CAAAW,EAAA,EAAoC;;;ADPjF,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAC,MAAM,GAAU,EAAE;EAEgC;EAElDC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACH,YAAY,CAACI,SAAS,EAAE,CAACC,SAAS,CACpCC,IAAI,IAAI;MACP,IAAI,CAACL,MAAM,GAAGK,IAAI;IACpB,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBAlBUX,aAAa,EAAAnB,EAAA,CAAA+B,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbf,aAAa;IAAAgB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR1BzC,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAClBH,EAAA,CAAAC,cAAA,aAAuB;QACjBD,EAAA,CAAAE,MAAA,wCAAkB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC3BH,EAAA,CAAAC,cAAA,uBAA0C;QACxCD,EAAA,CAAA2C,UAAA,IAAAC,sCAAA,6BAegB;QAClB5C,EAAA,CAAAG,YAAA,EAAgB;;;QAhBmBH,EAAA,CAAAK,SAAA,GAAS;QAATL,EAAA,CAAAY,UAAA,YAAA8B,GAAA,CAAApB,MAAA,CAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}