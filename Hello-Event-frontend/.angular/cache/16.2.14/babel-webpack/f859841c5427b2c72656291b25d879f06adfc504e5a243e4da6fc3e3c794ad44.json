{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UserDashboardComponent = class UserDashboardComponent {\n  constructor(authService, eventService) {\n    this.authService = authService;\n    this.eventService = eventService;\n    this.userInfo = null;\n    this.updatedUserInfo = {};\n    this.currentView = 'profile';\n    this.events = [];\n    this.selectedEvents = [];\n    this.date = '';\n    this.location = '';\n    this.keyword = '';\n  }\n  ngOnInit() {\n    this.loadUserInfo();\n    this.loadAllEvents();\n  }\n  parseDate(dateString) {\n    const [datePart, timePart] = dateString.split(' ');\n    const [day, month, year] = datePart.split('/').map(Number);\n    const [hours, minutes] = timePart.split(':').map(Number);\n    return new Date(year, month - 1, day, hours, minutes);\n  }\n  loadUserInfo() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(info => {\n        this.userInfo = info;\n        this.updatedUserInfo = {\n          ...info\n        };\n      }, error => {\n        console.error('Erreur lors de la récupération des informations utilisateur', error);\n      });\n    }\n  }\n  updateUser() {\n    if (this.userInfo) {\n      this.authService.updateUser({\n        ...this.userInfo,\n        ...this.updatedUserInfo\n      }).subscribe(response => {\n        console.log('User updated successfully', response);\n        this.userInfo = response;\n      }, error => {\n        if (error.status === 403) {\n          console.error('Access is forbidden: Check your token and user permissions.');\n        } else {\n          console.error('An error occurred:', error);\n        }\n      });\n    }\n  }\n  changeView(view) {\n    this.currentView = view;\n  }\n  loadAllEvents() {\n    this.eventService.getEvents().subscribe(events => {\n      console.log('Events reçus:', events);\n      events.forEach(event => {\n        console.log('Date brute de l\\'événement:', event.date);\n      });\n      this.events = events;\n    }, error => {\n      console.error('Erreur lors du chargement des événements', error);\n    });\n  }\n  toggleEventSelection(event) {\n    const index = this.selectedEvents.findIndex(e => e.id === event.id);\n    if (index > -1) {\n      this.selectedEvents.splice(index, 1);\n    } else {\n      this.selectedEvents.push(event);\n    }\n  }\n  saveHomePageEvents() {\n    this.eventService.saveHomePageEvents(this.selectedEvents).subscribe(response => {\n      console.log('Home page events saved successfully', response);\n    }, error => {\n      console.error('Error saving home page events', error);\n    });\n  }\n  searchEvents() {\n    this.eventService.searchEvents(this.date, this.location, this.keyword).subscribe(events => {\n      console.log('Résultats de la recherche:', events);\n      this.events = events;\n    }, error => {\n      console.error('Erreur lors de la recherche des événements', error);\n    });\n  }\n};\nUserDashboardComponent = __decorate([Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})], UserDashboardComponent);","map":{"version":3,"names":["Component","UserDashboardComponent","constructor","authService","eventService","userInfo","updatedUserInfo","currentView","events","selectedEvents","date","location","keyword","ngOnInit","loadUserInfo","loadAllEvents","parseDate","dateString","datePart","timePart","split","day","month","year","map","Number","hours","minutes","Date","username","getUsername","getUserInfo","subscribe","info","error","console","updateUser","response","log","status","changeView","view","getEvents","forEach","event","toggleEventSelection","index","findIndex","e","id","splice","push","saveHomePageEvents","searchEvents","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\user-dashboard\\user-dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { EventService } from '../event.service';\n\ninterface User {\n  id: number;\n  username: string;\n  email: string;\n  role: string;\n}\ninterface Event {\n  id: number;\n  name: string;\n  date: string | Date; // string si vous gardez la date brute, Date si vous la convertissez\n  location: string;\n  isUserEvent?: boolean;\n}\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n  userInfo: User | null = null;\n  updatedUserInfo: Partial<User> = {};\n  currentView: string = 'profile';\n  events: Event[] = [];\n  selectedEvents: any[] = [];\n  date: string = '';\n  location: string = '';\n  keyword: string = '';\n\n  constructor(\n    private authService: AuthService,\n    private eventService: EventService\n  ) { }\n\n  ngOnInit() {\n    this.loadUserInfo();\n    this.loadAllEvents();\n  }\n  parseDate(dateString: string): Date {\n    const [datePart, timePart] = dateString.split(' ');\n    const [day, month, year] = datePart.split('/').map(Number);\n    const [hours, minutes] = timePart.split(':').map(Number);\n    return new Date(year, month - 1, day, hours, minutes);\n  }\n  loadUserInfo() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(\n        info => {\n          this.userInfo = info;\n          this.updatedUserInfo = { ...info };\n        },\n        error => {\n          console.error('Erreur lors de la récupération des informations utilisateur', error);\n        }\n      );\n    }\n  }\n\n  updateUser() {\n    if (this.userInfo) {\n      this.authService.updateUser({ ...this.userInfo, ...this.updatedUserInfo }).subscribe(\n        response => {\n          console.log('User updated successfully', response);\n          this.userInfo = response;\n        },\n        error => {\n          if (error.status === 403) {\n            console.error('Access is forbidden: Check your token and user permissions.');\n          } else {\n            console.error('An error occurred:', error);\n          }\n        }\n      );\n    }\n  }\n\n  changeView(view: string) {\n    this.currentView = view;\n  }\n\n  loadAllEvents() {\n    this.eventService.getEvents().subscribe(\n      (events: Event[]) => {\n        console.log('Events reçus:', events);\n        events.forEach(event => {\n          console.log('Date brute de l\\'événement:', event.date);\n        });\n        this.events = events;\n      },\n      error => {\n        console.error('Erreur lors du chargement des événements', error);\n      }\n    );\n  }\n\n\n\n  toggleEventSelection(event: any) {\n    const index = this.selectedEvents.findIndex(e => e.id === event.id);\n    if (index > -1) {\n      this.selectedEvents.splice(index, 1);\n    } else {\n      this.selectedEvents.push(event);\n    }\n  }\n\n  saveHomePageEvents() {\n    this.eventService.saveHomePageEvents(this.selectedEvents).subscribe(\n      response => {\n        console.log('Home page events saved successfully', response);\n      },\n      error => {\n        console.error('Error saving home page events', error);\n      }\n    );\n  }\n  searchEvents() {\n    this.eventService.searchEvents(this.date, this.location, this.keyword).subscribe(\n      (events: Event[]) => {\n        console.log('Résultats de la recherche:', events);\n        this.events = events;\n      },\n      error => {\n        console.error('Erreur lors de la recherche des événements', error);\n      }\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}