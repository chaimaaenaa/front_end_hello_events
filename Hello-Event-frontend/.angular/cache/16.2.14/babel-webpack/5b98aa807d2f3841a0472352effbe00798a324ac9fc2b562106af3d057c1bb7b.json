{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nexport let EventService = class EventService {\n  constructor(http, AuthService, authService) {\n    this.http = http;\n    this.AuthService = AuthService;\n    this.apiUrl = 'http://localhost:8082/api/events';\n  }\n  getEvents() {\n    return this.http.get(`${this.apiUrl}`).pipe(catchError(error => {\n      console.error('Erreur brute:', error);\n      return throwError('Erreur lors du chargement des événements. Veuillez réessayer.');\n    }));\n  }\n  searchEvents(date, location, keyword) {\n    return this.http.get(`${this.apiUrl}/search`, {\n      params: {\n        date,\n        location,\n        keyword\n      }\n    });\n  }\n  getEventDetails(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  bookEvent(eventId, numberOfTickets, userEmail) {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.getToken()}` // If using token-based auth\n    });\n\n    return this.http.post(`${this.apiUrl}/${eventId}/book`, {\n      userEmail,\n      numberOfTickets,\n      lastUpdated: new Date()\n    }, {\n      headers\n    }).pipe(catchError(error => {\n      console.error('Error booking event:', error);\n      return throwError('Error booking event. Please try again.');\n    }));\n  }\n  getAboutInfo() {\n    return this.http.get(`${this.apiUrl}/about`);\n  }\n  submitContact(contactData) {\n    return this.http.post(`${this.apiUrl}/contact`, contactData);\n  }\n  saveHomePageEvents(selectedEvents) {\n    return this.http.post(`${this.apiUrl}/home-events`, selectedEvents);\n  }\n  getUserEvents(userId) {\n    return this.http.get(`${this.apiUrl}/user/${userId}`);\n  }\n};\nEventService = __decorate([Injectable({\n  providedIn: 'root'\n})], EventService);","map":{"version":3,"names":["Injectable","HttpHeaders","catchError","throwError","EventService","constructor","http","AuthService","authService","apiUrl","getEvents","get","pipe","error","console","searchEvents","date","location","keyword","params","getEventDetails","id","bookEvent","eventId","numberOfTickets","userEmail","headers","getToken","post","lastUpdated","Date","getAboutInfo","submitContact","contactData","saveHomePageEvents","selectedEvents","getUserEvents","userId","__decorate","providedIn"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {catchError, Observable, throwError} from 'rxjs';\nimport {AuthService} from  '../auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private apiUrl = 'http://localhost:8082/api/events';\n\n  constructor(private http: HttpClient ,private  AuthService authService ) { }\n\n  getEvents(): Observable<any> {\n    return this.http.get(`${this.apiUrl}`).pipe(\n      catchError(error => {\n        console.error('Erreur brute:', error);\n        return throwError('Erreur lors du chargement des événements. Veuillez réessayer.');\n      })\n    );\n  }\n\n  searchEvents(date: string, location: string, keyword: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/search`, { params: { date, location, keyword } });\n  }\n\n  getEventDetails(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n\n  bookEvent(eventId: number, numberOfTickets: number, userEmail: string): Observable<any> {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.getToken()}` // If using token-based auth\n    });\n    return this.http.post(`${this.apiUrl}/${eventId}/book`, { userEmail, numberOfTickets, lastUpdated: new Date() }, { headers })\n      .pipe(\n        catchError(error => {\n          console.error('Error booking event:', error);\n          return throwError('Error booking event. Please try again.');\n        })\n      );\n  }\n\n\n  getAboutInfo(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/about`);\n  }\n\n  submitContact(contactData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/contact`, contactData);\n  }\n  saveHomePageEvents(selectedEvents: any[]): Observable<any> {\n    return this.http.post(`${this.apiUrl}/home-events`, selectedEvents);\n  }\n  getUserEvents(userId: number): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/user/${userId}`);\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAAoBC,WAAW,QAAO,sBAAsB;AAC5D,SAAQC,UAAU,EAAcC,UAAU,QAAO,MAAM;AAKhD,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,IAAgB,EAAWC,WAAW,EAACC,WAAW;IAAlD,KAAAF,IAAI,GAAJA,IAAI;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAFlD,KAAAE,MAAM,GAAG,kCAAkC;EAEwB;EAE3EC,SAASA,CAAA;IACP,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,EAAE,CAAC,CAACG,IAAI,CACzCV,UAAU,CAACW,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAOV,UAAU,CAAC,+DAA+D,CAAC;IACpF,CAAC,CAAC,CACH;EACH;EAEAY,YAAYA,CAACC,IAAY,EAAEC,QAAgB,EAAEC,OAAe;IAC1D,OAAO,IAAI,CAACZ,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,SAAS,EAAE;MAAEU,MAAM,EAAE;QAAEH,IAAI;QAAEC,QAAQ;QAAEC;MAAO;IAAE,CAAE,CAAC;EACxF;EAEAE,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACf,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,IAAIY,EAAE,EAAE,CAAC;EAC9C;EAEAC,SAASA,CAACC,OAAe,EAAEC,eAAuB,EAAEC,SAAiB;IACnE,MAAMC,OAAO,GAAG,IAAIzB,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAU,IAAI,CAACO,WAAW,CAACmB,QAAQ,EAAE,EAAE,CAAC;KAC1D,CAAC;;IACF,OAAO,IAAI,CAACrB,IAAI,CAACsB,IAAI,CAAC,GAAG,IAAI,CAACnB,MAAM,IAAIc,OAAO,OAAO,EAAE;MAAEE,SAAS;MAAED,eAAe;MAAEK,WAAW,EAAE,IAAIC,IAAI;IAAE,CAAE,EAAE;MAAEJ;IAAO,CAAE,CAAC,CAC1Hd,IAAI,CACHV,UAAU,CAACW,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAOV,UAAU,CAAC,wCAAwC,CAAC;IAC7D,CAAC,CAAC,CACH;EACL;EAGA4B,YAAYA,CAAA;IACV,OAAO,IAAI,CAACzB,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,QAAQ,CAAC;EAC9C;EAEAuB,aAAaA,CAACC,WAAgB;IAC5B,OAAO,IAAI,CAAC3B,IAAI,CAACsB,IAAI,CAAC,GAAG,IAAI,CAACnB,MAAM,UAAU,EAAEwB,WAAW,CAAC;EAC9D;EACAC,kBAAkBA,CAACC,cAAqB;IACtC,OAAO,IAAI,CAAC7B,IAAI,CAACsB,IAAI,CAAC,GAAG,IAAI,CAACnB,MAAM,cAAc,EAAE0B,cAAc,CAAC;EACrE;EACAC,aAAaA,CAACC,MAAc;IAC1B,OAAO,IAAI,CAAC/B,IAAI,CAACK,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,SAAS4B,MAAM,EAAE,CAAC;EAC9D;CACD;AAjDYjC,YAAY,GAAAkC,UAAA,EAHxBtC,UAAU,CAAC;EACVuC,UAAU,EAAE;CACb,CAAC,C,EACWnC,YAAY,CAiDxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}