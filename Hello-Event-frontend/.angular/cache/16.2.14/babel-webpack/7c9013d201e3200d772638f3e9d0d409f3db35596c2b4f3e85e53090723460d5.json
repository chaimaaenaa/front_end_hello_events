{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class AuthInterceptor {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(request, next) {\n    if (request.url.includes('/login') || request.url.includes('/register')) {\n      return next.handle(request);\n    }\n    const token = this.authService.getToken();\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["AuthInterceptor","constructor","authService","intercept","request","next","url","includes","handle","token","getToken","clone","setHeaders","Authorization","_","i0","ɵɵinject","i1","AuthService","_2","factory","ɵfac"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (request.url.includes('/login') || request.url.includes('/register')) {\n      return next.handle(request);\n    }\n\n    const token = this.authService.getToken();\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAID,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,QAAQ,CAAC,IAAIH,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;MACvE,OAAOF,IAAI,CAACG,MAAM,CAACJ,OAAO,CAAC;;IAG7B,MAAMK,KAAK,GAAG,IAAI,CAACP,WAAW,CAACQ,QAAQ,EAAE;IACzC,IAAID,KAAK,EAAE;MACTL,OAAO,GAAGA,OAAO,CAACO,KAAK,CAAC;QACtBC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAUJ,KAAK;;OAEjC,CAAC;;IAEJ,OAAOJ,IAAI,CAACG,MAAM,CAACJ,OAAO,CAAC;EAC7B;EAAC,QAAAU,CAAA,G;qBAlBUd,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfnB,eAAe;IAAAoB,OAAA,EAAfpB,eAAe,CAAAqB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}