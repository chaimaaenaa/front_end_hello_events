{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/common\";\nfunction AdminDashboardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Nom d'utilisateur : \", ctx_r0.userInfo.username, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Email : \", ctx_r0.userInfo.email, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"R\\u00F4le : \", ctx_r0.userInfo.role, \"\");\n  }\n}\nfunction AdminDashboardComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AdminDashboardComponent_tr_21_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateUser(user_r2));\n    });\n    i0.ɵɵtext(11, \"Modifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AdminDashboardComponent_tr_21_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteUser(user_r2.id));\n    });\n    i0.ɵɵtext(13, \"Supprimer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.role);\n  }\n}\nexport class AdminDashboardComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.users = [];\n  }\n  ngOnInit() {\n    this.loadAdminInfo();\n    this.loadUsers();\n  }\n  loadAdminInfo() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(info => {\n        this.userInfo = info;\n      }, error => {\n        console.error('Erreur lors de la récupération des informations utilisateur', error);\n      });\n    }\n  }\n  loadUsers() {\n    this.authService.getAllUsers().subscribe(users => {\n      this.users = users;\n    }, error => {\n      console.error('Erreur lors du chargement des utilisateurs', error);\n    });\n  }\n  updateUser(user) {\n    this.authService.updateUser(user).subscribe(updatedUser => {\n      console.log('Utilisateur mis à jour', updatedUser);\n      this.loadUsers(); // Recharger la liste après la mise à jour\n    }, error => {\n      console.error('Erreur lors de la mise à jour de l\\'utilisateur', error);\n    });\n  }\n  deleteUser(id) {\n    this.authService.deleteUser(id).subscribe(() => {\n      console.log('Utilisateur supprimé');\n      this.load;\n    });\n  }\n  static #_ = this.ɵfac = function AdminDashboardComponent_Factory(t) {\n    return new (t || AdminDashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminDashboardComponent,\n    selectors: [[\"app-admin-dashboard\"]],\n    decls: 22,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function AdminDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"admin-dashboard works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Informations de l'administrateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, AdminDashboardComponent_div_4_Template, 7, 3, \"div\", 0);\n        i0.ɵɵelementStart(5, \"h2\");\n        i0.ɵɵtext(6, \"Gestion des utilisateurs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"table\")(8, \"thead\")(9, \"tr\")(10, \"th\");\n        i0.ɵɵtext(11, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Nom d'utilisateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"R\\u00F4le\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"tbody\");\n        i0.ɵɵtemplate(21, AdminDashboardComponent_tr_21_Template, 14, 4, \"tr\", 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.userInfo);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","userInfo","username","email","role","ɵɵlistener","AdminDashboardComponent_tr_21_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r4","user_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","updateUser","AdminDashboardComponent_tr_21_Template_button_click_12_listener","ctx_r5","deleteUser","id","ɵɵtextInterpolate","AdminDashboardComponent","constructor","authService","users","ngOnInit","loadAdminInfo","loadUsers","getUsername","getUserInfo","subscribe","info","error","console","getAllUsers","user","updatedUser","log","load","_","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","AdminDashboardComponent_Template","rf","ctx","ɵɵtemplate","AdminDashboardComponent_div_4_Template","AdminDashboardComponent_tr_21_Template","ɵɵproperty"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\admin-dashboard\\admin-dashboard.component.ts","C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\admin-dashboard\\admin-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  userInfo: any;\n  users: any[] = [];\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loadAdminInfo();\n    this.loadUsers();\n  }\n\n  loadAdminInfo() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(\n        info => {\n          this.userInfo = info;\n        },\n        error => {\n          console.error('Erreur lors de la récupération des informations utilisateur', error);\n        }\n      );\n    }\n  }\n\n  loadUsers() {\n    this.authService.getAllUsers().subscribe(\n      users => {\n        this.users = users;\n      },\n      error => {\n        console.error('Erreur lors du chargement des utilisateurs', error);\n      }\n    );\n  }\n\n  updateUser(user: any) {\n    this.authService.updateUser(user).subscribe(\n      updatedUser => {\n        console.log('Utilisateur mis à jour', updatedUser);\n        this.loadUsers(); // Recharger la liste après la mise à jour\n      },\n      error => {\n        console.error('Erreur lors de la mise à jour de l\\'utilisateur', error);\n      }\n    );\n  }\n\n  deleteUser(id: number) {\n    this.authService.deleteUser(id).subscribe(\n      () => {\n        console.log('Utilisateur supprimé');\n        this.load\n","<p>admin-dashboard works!</p>\n<h2>Informations de l'administrateur</h2>\n<div *ngIf=\"userInfo\">\n  <p>Nom d'utilisateur : {{ userInfo.username }}</p>\n  <p>Email : {{ userInfo.email }}</p>\n  <p>Rôle : {{ userInfo.role }}</p>\n</div>\n\n<h2>Gestion des utilisateurs</h2>\n<table>\n  <thead>\n  <tr>\n    <th>ID</th>\n    <th>Nom d'utilisateur</th>\n    <th>Email</th>\n    <th>Rôle</th>\n    <th>Actions</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let user of users\">\n    <td>{{ user.id }}</td>\n    <td>{{ user.username }}</td>\n    <td>{{ user.email }}</td>\n    <td>{{ user.role }}</td>\n    <td>\n      <button (click)=\"updateUser(user)\">Modifier</button>\n      <button (click)=\"deleteUser(user.id)\">Supprimer</button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}