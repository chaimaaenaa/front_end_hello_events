{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8082/api/events';\n  }\n  getEvents() {\n    return this.http.get(`${this.apiUrl}`).pipe(catchError(error => {\n      console.error('Erreur brute:', error);\n      return throwError('Erreur lors du chargement des événements. Veuillez réessayer.');\n    }));\n  }\n  searchEvents(date, location, keyword) {\n    return this.http.get(`${this.apiUrl}/search`, {\n      params: {\n        date,\n        location,\n        keyword\n      }\n    });\n  }\n  getEventDetails(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  bookEvent(eventId, numberOfTickets) {\n    return this.http.post(`${this.apiUrl}/${eventId}/book`, {\n      numberOfTickets\n    });\n  }\n  getAboutInfo() {\n    return this.http.get(`${this.apiUrl}/about`);\n  }\n  submitContact(contactData) {\n    return this.http.post(`${this.apiUrl}/contact`, contactData);\n  }\n  saveHomePageEvents(selectedEvents) {\n    return this.http.post(`${this.apiUrl}/home-events`, selectedEvents);\n  }\n  getUserEvents(userId) {\n    return this.http.get(`${this.apiUrl}/user/${userId}`);\n  }\n  static #_ = this.ɵfac = function EventService_Factory(t) {\n    return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventService,\n    factory: EventService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","throwError","EventService","constructor","http","apiUrl","getEvents","get","pipe","error","console","searchEvents","date","location","keyword","params","getEventDetails","id","bookEvent","eventId","numberOfTickets","post","getAboutInfo","submitContact","contactData","saveHomePageEvents","selectedEvents","getUserEvents","userId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {catchError, Observable, throwError} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private apiUrl = 'http://localhost:8082/api/events';\n\n  constructor(private http: HttpClient) { }\n\n  getEvents(): Observable<any> {\n    return this.http.get(`${this.apiUrl}`).pipe(\n      catchError(error => {\n        console.error('Erreur brute:', error);\n        return throwError('Erreur lors du chargement des événements. Veuillez réessayer.');\n      })\n    );\n  }\n\n  searchEvents(date: string, location: string, keyword: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/search`, { params: { date, location, keyword } });\n  }\n\n  getEventDetails(id: number): Observable<Event> {\n    return this.http.get<Event>(`${this.apiUrl}/${id}`);\n  }\n\n  bookEvent(eventId: number, numberOfTickets: number): Observable<any> {\n    return this.http.post(`${this.apiUrl}/${eventId}/book`, { numberOfTickets });\n  }\n\n  getAboutInfo(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/about`);\n  }\n\n  submitContact(contactData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/contact`, contactData);\n  }\n  saveHomePageEvents(selectedEvents: any[]): Observable<any> {\n    return this.http.post(`${this.apiUrl}/home-events`, selectedEvents);\n  }\n  getUserEvents(userId: number): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/user/${userId}`);\n  }\n}\n"],"mappings":"AAEA,SAAQA,UAAU,EAAcC,UAAU,QAAO,MAAM;;;AAKvD,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC;EAEX;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,EAAE,CAAC,CAACG,IAAI,CACzCR,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAOR,UAAU,CAAC,+DAA+D,CAAC;IACpF,CAAC,CAAC,CACH;EACH;EAEAU,YAAYA,CAACC,IAAY,EAAEC,QAAgB,EAAEC,OAAe;IAC1D,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,SAAS,EAAE;MAAEU,MAAM,EAAE;QAAEH,IAAI;QAAEC,QAAQ;QAAEC;MAAO;IAAE,CAAE,CAAC;EACxF;EAEAE,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,IAAIY,EAAE,EAAE,CAAC;EACrD;EAEAC,SAASA,CAACC,OAAe,EAAEC,eAAuB;IAChD,OAAO,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAC,GAAG,IAAI,CAAChB,MAAM,IAAIc,OAAO,OAAO,EAAE;MAAEC;IAAe,CAAE,CAAC;EAC9E;EAEAE,YAAYA,CAAA;IACV,OAAO,IAAI,CAAClB,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,QAAQ,CAAC;EAC9C;EAEAkB,aAAaA,CAACC,WAAgB;IAC5B,OAAO,IAAI,CAACpB,IAAI,CAACiB,IAAI,CAAC,GAAG,IAAI,CAAChB,MAAM,UAAU,EAAEmB,WAAW,CAAC;EAC9D;EACAC,kBAAkBA,CAACC,cAAqB;IACtC,OAAO,IAAI,CAACtB,IAAI,CAACiB,IAAI,CAAC,GAAG,IAAI,CAAChB,MAAM,cAAc,EAAEqB,cAAc,CAAC;EACrE;EACAC,aAAaA,CAACC,MAAc;IAC1B,OAAO,IAAI,CAACxB,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,SAASuB,MAAM,EAAE,CAAC;EAC9D;EAAC,QAAAC,CAAA,G;qBAtCU3B,YAAY,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZhC,YAAY;IAAAiC,OAAA,EAAZjC,YAAY,CAAAkC,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}