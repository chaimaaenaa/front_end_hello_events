{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../event.service\";\nimport * as i2 from \"../reservation.service\";\nexport class EventBookingComponent {\n  constructor(eventService, reservationService) {\n    this.eventService = eventService;\n    this.reservationService = reservationService;\n    this.events = [];\n    this.selectedEvent = null;\n    this.numberOfTickets = 1;\n    this.userEmail = 'user@example.com';\n  }\n  ngOnInit() {\n    this.loadEvents();\n  }\n  loadEvents() {\n    this.eventService.getEvents().subscribe(events => {\n      this.events = events;\n    });\n  }\n  selectEventForBooking(event) {\n    this.selectedEvent = event;\n  }\n  bookEvent() {\n    if (this.selectedEvent) {\n      const lastUpdated = new Date().toISOString();\n      this.reservationService.createReservation(this.userEmail, this.selectedEvent.id, this.numberOfTickets, lastUpdated).subscribe(reservation => {\n        console.log('Reservation successful:', reservation);\n        alert('Reservation successful');\n        this.selectedEvent = null; // Reset after booking\n      }, error => {\n        console.error('Reservation failed:', error);\n        alert('Reservation failed');\n      });\n    }\n  }\n  cancelBooking() {\n    this.selectedEvent = null; // Reset form and selected event\n  }\n  static #_ = this.ɵfac = function EventBookingComponent_Factory(t) {\n    return new (t || EventBookingComponent)(i0.ɵɵdirectiveInject(i1.EventService), i0.ɵɵdirectiveInject(i2.ReservationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EventBookingComponent,\n    selectors: [[\"app-event-booking\"]],\n    decls: 2,\n    vars: 0,\n    template: function EventBookingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"event-booking works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventBookingComponent","constructor","eventService","reservationService","events","selectedEvent","numberOfTickets","userEmail","ngOnInit","loadEvents","getEvents","subscribe","selectEventForBooking","event","bookEvent","lastUpdated","Date","toISOString","createReservation","id","reservation","console","log","alert","error","cancelBooking","_","i0","ɵɵdirectiveInject","i1","EventService","i2","ReservationService","_2","selectors","decls","vars","template","EventBookingComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\event-booking\\event-booking.component.ts","C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\event-booking\\event-booking.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EventService } from '../event.service';\nimport { ReservationService } from '../reservation.service';\nimport { Reservation } from '../reservation.model';\n\n@Component({\n  selector: 'app-event-booking',\n  templateUrl: './event-booking.component.html',\n  styleUrls: ['./event-booking.component.scss']\n})\nexport class EventBookingComponent implements OnInit {\n  events: Event[] = [];\n  selectedEvent: Event | null = null;\n  numberOfTickets: number = 1;\n  userEmail: string = 'user@example.com';\n\n  constructor(\n    private eventService: EventService,\n    private reservationService: ReservationService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadEvents();\n  }\n\n  loadEvents(): void {\n    this.eventService.getEvents().subscribe((events: Event[]) => {\n      this.events = events;\n    });\n  }\n\n  selectEventForBooking(event: Event): void {\n    this.selectedEvent = event;\n  }\n\n  bookEvent(): void {\n    if (this.selectedEvent) {\n      const lastUpdated = new Date().toISOString();\n      this.reservationService.createReservation(this.userEmail, this.selectedEvent.id, this.numberOfTickets, lastUpdated)\n        .subscribe((reservation: Reservation) => {\n          console.log('Reservation successful:', reservation);\n          alert('Reservation successful');\n          this.selectedEvent = null;  // Reset after booking\n        }, (error) => {\n          console.error('Reservation failed:', error);\n          alert('Reservation failed');\n        });\n    }\n  }\n\n  cancelBooking(): void {\n    this.selectedEvent = null;  // Reset form and selected event\n  }\n}\n","<p>event-booking works!</p>\n"],"mappings":";;;AAUA,OAAM,MAAOA,qBAAqB;EAMhCC,YACUC,YAA0B,EAC1BC,kBAAsC;IADtC,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,kBAAkB,GAAlBA,kBAAkB;IAP5B,KAAAC,MAAM,GAAY,EAAE;IACpB,KAAAC,aAAa,GAAiB,IAAI;IAClC,KAAAC,eAAe,GAAW,CAAC;IAC3B,KAAAC,SAAS,GAAW,kBAAkB;EAKnC;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACP,YAAY,CAACQ,SAAS,EAAE,CAACC,SAAS,CAAEP,MAAe,IAAI;MAC1D,IAAI,CAACA,MAAM,GAAGA,MAAM;IACtB,CAAC,CAAC;EACJ;EAEAQ,qBAAqBA,CAACC,KAAY;IAChC,IAAI,CAACR,aAAa,GAAGQ,KAAK;EAC5B;EAEAC,SAASA,CAAA;IACP,IAAI,IAAI,CAACT,aAAa,EAAE;MACtB,MAAMU,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MAC5C,IAAI,CAACd,kBAAkB,CAACe,iBAAiB,CAAC,IAAI,CAACX,SAAS,EAAE,IAAI,CAACF,aAAa,CAACc,EAAE,EAAE,IAAI,CAACb,eAAe,EAAES,WAAW,CAAC,CAChHJ,SAAS,CAAES,WAAwB,IAAI;QACtCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,WAAW,CAAC;QACnDG,KAAK,CAAC,wBAAwB,CAAC;QAC/B,IAAI,CAAClB,aAAa,GAAG,IAAI,CAAC,CAAE;MAC9B,CAAC,EAAGmB,KAAK,IAAI;QACXH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CD,KAAK,CAAC,oBAAoB,CAAC;MAC7B,CAAC,CAAC;;EAER;EAEAE,aAAaA,CAAA;IACX,IAAI,CAACpB,aAAa,GAAG,IAAI,CAAC,CAAE;EAC9B;EAAC,QAAAqB,CAAA,G;qBA1CU1B,qBAAqB,EAAA2B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBjC,qBAAqB;IAAAkC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVlCZ,EAAA,CAAAc,cAAA,QAAG;QAAAd,EAAA,CAAAe,MAAA,2BAAoB;QAAAf,EAAA,CAAAgB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}