{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"../event.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserDashboardComponent_div_14_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h4\");\n    i0.ɵɵtext(8, \"Mettre \\u00E0 jour les informations\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function UserDashboardComponent_div_14_div_3_Template_form_ngSubmit_9_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.updateUser());\n    });\n    i0.ɵɵelementStart(10, \"label\", 5);\n    i0.ɵɵtext(11, \"Nom d'utilisateur:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function UserDashboardComponent_div_14_div_3_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.updatedUserInfo.username = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\", 7);\n    i0.ɵɵtext(14, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function UserDashboardComponent_div_14_div_3_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.updatedUserInfo.email = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 9);\n    i0.ɵɵtext(17, \"Mettre \\u00E0 jour\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Nom d'utilisateur : \", ctx_r3.userInfo.username, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"R\\u00F4le : \", ctx_r3.userInfo.role, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Email : \", ctx_r3.userInfo.email, \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.updatedUserInfo.username);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.updatedUserInfo.email);\n  }\n}\nfunction UserDashboardComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Mon Profil\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, UserDashboardComponent_div_14_div_3_Template, 18, 5, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.userInfo);\n  }\n}\nfunction UserDashboardComponent_div_15_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 11);\n    i0.ɵɵlistener(\"change\", function UserDashboardComponent_div_15_li_6_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const event_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.toggleEventSelection(event_r9));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const event_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r8.selectedEvents.includes(event_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", event_r9.name, \" - \", i0.ɵɵpipeBind1(3, 3, event_r9.date), \" \");\n  }\n}\nfunction UserDashboardComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Gestion de la Page d'Accueil\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"S\\u00E9lectionnez les \\u00E9v\\u00E9nements \\u00E0 afficher sur la page d'accueil :\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ul\");\n    i0.ɵɵtemplate(6, UserDashboardComponent_div_15_li_6_Template, 4, 5, \"li\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function UserDashboardComponent_div_15_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.saveHomePageEvents());\n    });\n    i0.ɵɵtext(8, \"Enregistrer les changements\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.events);\n  }\n}\nfunction UserDashboardComponent_div_16_li_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"(Votre \\u00E9v\\u00E9nement)\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserDashboardComponent_div_16_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtemplate(1, UserDashboardComponent_div_16_li_4_span_1_Template, 2, 0, \"span\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const event_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", event_r15.isUserEvent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", event_r15.name, \" - \", i0.ɵɵpipeBind2(3, 4, event_r15.date, \"dd/MM/yyyy HH:mm\"), \" - \", event_r15.location, \" \");\n  }\n}\nfunction UserDashboardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Mes \\u00C9v\\u00E9nements\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, UserDashboardComponent_div_16_li_4_Template, 4, 7, \"li\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.events);\n  }\n}\nexport class UserDashboardComponent {\n  constructor(authService, eventService) {\n    this.authService = authService;\n    this.eventService = eventService;\n    this.userInfo = null;\n    this.updatedUserInfo = {};\n    this.currentView = 'profile';\n    this.events = [];\n    this.selectedEvents = [];\n  }\n  ngOnInit() {\n    this.loadUserInfo();\n    this.loadAllEvents();\n  }\n  parseDate(dateString) {\n    const [datePart, timePart] = dateString.split(' ');\n    const [day, month, year] = datePart.split('/').map(Number);\n    const [hours, minutes] = timePart.split(':').map(Number);\n    return new Date(year, month - 1, day, hours, minutes);\n  }\n  loadUserInfo() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(info => {\n        this.userInfo = info;\n        this.updatedUserInfo = {\n          ...info\n        };\n      }, error => {\n        console.error('Erreur lors de la récupération des informations utilisateur', error);\n      });\n    }\n  }\n  updateUser() {\n    if (this.userInfo) {\n      this.authService.updateUser({\n        ...this.userInfo,\n        ...this.updatedUserInfo\n      }).subscribe(response => {\n        console.log('User updated successfully', response);\n        this.userInfo = response;\n      }, error => {\n        if (error.status === 403) {\n          console.error('Access is forbidden: Check your token and user permissions.');\n        } else {\n          console.error('An error occurred:', error);\n        }\n      });\n    }\n  }\n  changeView(view) {\n    this.currentView = view;\n  }\n  loadAllEvents() {\n    this.eventService.getEvents().subscribe(events => {\n      console.log('Events reçus:', events);\n      events.forEach(event => {\n        console.log('Date brute de l\\'événement:', event.date);\n      });\n      this.events = events;\n    }, error => {\n      console.error('Erreur lors du chargement des événements', error);\n    });\n  }\n  toggleEventSelection(event) {\n    const index = this.selectedEvents.findIndex(e => e.id === event.id);\n    if (index > -1) {\n      this.selectedEvents.splice(index, 1);\n    } else {\n      this.selectedEvents.push(event);\n    }\n  }\n  saveHomePageEvents() {\n    this.eventService.saveHomePageEvents(this.selectedEvents).subscribe(response => {\n      console.log('Home page events saved successfully', response);\n    }, error => {\n      console.error('Error saving home page events', error);\n    });\n  }\n  static #_ = this.ɵfac = function UserDashboardComponent_Factory(t) {\n    return new (t || UserDashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.EventService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserDashboardComponent,\n    selectors: [[\"app-user-dashboard\"]],\n    decls: 17,\n    vars: 4,\n    consts: [[3, \"click\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngIf\"], [3, \"ngSubmit\"], [\"for\", \"username\"], [\"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [\"style\", \"color: green;\", 4, \"ngIf\"], [2, \"color\", \"green\"]],\n    template: function UserDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Tableau de bord utilisateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"nav\")(3, \"ul\")(4, \"li\")(5, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function UserDashboardComponent_Template_a_click_5_listener() {\n          return ctx.changeView(\"profile\");\n        });\n        i0.ɵɵtext(6, \"Profil\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"li\")(8, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function UserDashboardComponent_Template_a_click_8_listener() {\n          return ctx.changeView(\"home\");\n        });\n        i0.ɵɵtext(9, \"Gestion Accueil\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"li\")(11, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function UserDashboardComponent_Template_a_click_11_listener() {\n          return ctx.changeView(\"events\");\n        });\n        i0.ɵɵtext(12, \"Mes \\u00C9v\\u00E9nements\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(13, \"div\", 1);\n        i0.ɵɵtemplate(14, UserDashboardComponent_div_14_Template, 4, 1, \"div\", 2);\n        i0.ɵɵtemplate(15, UserDashboardComponent_div_15_Template, 9, 1, \"div\", 2);\n        i0.ɵɵtemplate(16, UserDashboardComponent_div_16_Template, 5, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"profile\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"home\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"events\");\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i3.NgSwitch, i3.NgSwitchCase, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.DatePipe],\n    styles: [\"h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%] {\\n  color: #333;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  margin: 10px 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci1kYXNoYm9hcmQvdXNlci1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJoMSwgaDIge1xyXG4gIGNvbG9yOiAjMzMzO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG5cclxuZGl2IHtcclxuICBtYXJnaW46IDEwcHggMDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserDashboardComponent_div_14_div_3_Template_form_ngSubmit_9_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","updateUser","UserDashboardComponent_div_14_div_3_Template_input_ngModelChange_12_listener","$event","ctx_r6","updatedUserInfo","username","UserDashboardComponent_div_14_div_3_Template_input_ngModelChange_15_listener","ctx_r7","email","ɵɵadvance","ɵɵtextInterpolate1","ctx_r3","userInfo","role","ɵɵproperty","ɵɵtemplate","UserDashboardComponent_div_14_div_3_Template","ctx_r0","UserDashboardComponent_div_15_li_6_Template_input_change_1_listener","restoredCtx","_r11","event_r9","$implicit","ctx_r10","toggleEventSelection","ctx_r8","selectedEvents","includes","ɵɵtextInterpolate2","name","ɵɵpipeBind1","date","UserDashboardComponent_div_15_li_6_Template","UserDashboardComponent_div_15_Template_button_click_7_listener","_r13","ctx_r12","saveHomePageEvents","ctx_r1","events","UserDashboardComponent_div_16_li_4_span_1_Template","event_r15","isUserEvent","ɵɵtextInterpolate3","ɵɵpipeBind2","location","UserDashboardComponent_div_16_li_4_Template","ctx_r2","UserDashboardComponent","constructor","authService","eventService","currentView","ngOnInit","loadUserInfo","loadAllEvents","parseDate","dateString","datePart","timePart","split","day","month","year","map","Number","hours","minutes","Date","getUsername","getUserInfo","subscribe","info","error","console","response","log","status","changeView","view","getEvents","forEach","event","index","findIndex","e","id","splice","push","_","ɵɵdirectiveInject","i1","AuthService","i2","EventService","_2","selectors","decls","vars","consts","template","UserDashboardComponent_Template","rf","ctx","UserDashboardComponent_Template_a_click_5_listener","UserDashboardComponent_Template_a_click_8_listener","UserDashboardComponent_Template_a_click_11_listener","UserDashboardComponent_div_14_Template","UserDashboardComponent_div_15_Template","UserDashboardComponent_div_16_Template"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\user-dashboard\\user-dashboard.component.ts","C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\user-dashboard\\user-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { EventService } from '../event.service';\n\ninterface User {\n  id: number;\n  username: string;\n  email: string;\n  role: string;\n}\ninterface Event {\n  id: number;\n  name: string;\n  date: string | Date; // string si vous gardez la date brute, Date si vous la convertissez\n  location: string;\n  isUserEvent?: boolean;\n}\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n  userInfo: User | null = null;\n  updatedUserInfo: Partial<User> = {};\n  currentView: string = 'profile';\n  events: Event[] = [];\n  selectedEvents: any[] = [];\n\n  constructor(\n    private authService: AuthService,\n    private eventService: EventService\n  ) { }\n\n  ngOnInit() {\n    this.loadUserInfo();\n    this.loadAllEvents();\n  }\n  parseDate(dateString: string): Date {\n    const [datePart, timePart] = dateString.split(' ');\n    const [day, month, year] = datePart.split('/').map(Number);\n    const [hours, minutes] = timePart.split(':').map(Number);\n    return new Date(year, month - 1, day, hours, minutes);\n  }\n  loadUserInfo() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(\n        info => {\n          this.userInfo = info;\n          this.updatedUserInfo = { ...info };\n        },\n        error => {\n          console.error('Erreur lors de la récupération des informations utilisateur', error);\n        }\n      );\n    }\n  }\n\n  updateUser() {\n    if (this.userInfo) {\n      this.authService.updateUser({ ...this.userInfo, ...this.updatedUserInfo }).subscribe(\n        response => {\n          console.log('User updated successfully', response);\n          this.userInfo = response;\n        },\n        error => {\n          if (error.status === 403) {\n            console.error('Access is forbidden: Check your token and user permissions.');\n          } else {\n            console.error('An error occurred:', error);\n          }\n        }\n      );\n    }\n  }\n\n  changeView(view: string) {\n    this.currentView = view;\n  }\n\n  loadAllEvents() {\n    this.eventService.getEvents().subscribe(\n      (events: Event[]) => {\n        console.log('Events reçus:', events);\n        events.forEach(event => {\n          console.log('Date brute de l\\'événement:', event.date);\n        });\n        this.events = events;\n      },\n      error => {\n        console.error('Erreur lors du chargement des événements', error);\n      }\n    );\n  }\n\n\n\n  toggleEventSelection(event: any) {\n    const index = this.selectedEvents.findIndex(e => e.id === event.id);\n    if (index > -1) {\n      this.selectedEvents.splice(index, 1);\n    } else {\n      this.selectedEvents.push(event);\n    }\n  }\n\n  saveHomePageEvents() {\n    this.eventService.saveHomePageEvents(this.selectedEvents).subscribe(\n      response => {\n        console.log('Home page events saved successfully', response);\n      },\n      error => {\n        console.error('Error saving home page events', error);\n      }\n    );\n  }\n}\n","<h2>Tableau de bord utilisateur</h2>\n\n<nav>\n  <ul>\n    <li><a (click)=\"changeView('profile')\">Profil</a></li>\n    <li><a (click)=\"changeView('home')\">Gestion Accueil</a></li>\n    <li><a (click)=\"changeView('events')\">Mes Événements</a></li>\n  </ul>\n</nav>\n\n<div [ngSwitch]=\"currentView\">\n  <div *ngSwitchCase=\"'profile'\">\n    <h3>Mon Profil</h3>\n    <div *ngIf=\"userInfo\">\n      <p>Nom d'utilisateur : {{ userInfo.username }}</p>\n      <p>Rôle : {{ userInfo.role }}</p>\n      <p>Email : {{ userInfo.email }}</p>\n\n      <h4>Mettre à jour les informations</h4>\n      <form (ngSubmit)=\"updateUser()\">\n        <label for=\"username\">Nom d'utilisateur:</label>\n        <input id=\"username\" [(ngModel)]=\"updatedUserInfo.username\" name=\"username\" required>\n\n        <label for=\"email\">Email:</label>\n        <input id=\"email\" [(ngModel)]=\"updatedUserInfo.email\" name=\"email\" required>\n\n        <button type=\"submit\">Mettre à jour</button>\n      </form>\n    </div>\n  </div>\n\n  <div *ngSwitchCase=\"'home'\">\n    <h3>Gestion de la Page d'Accueil</h3>\n    <p>Sélectionnez les événements à afficher sur la page d'accueil :</p>\n    <ul>\n      <li *ngFor=\"let event of events\">\n        <input type=\"checkbox\" (change)=\"toggleEventSelection(event)\" [checked]=\"selectedEvents.includes(event)\">\n        {{ event.name }} - {{ event.date | date }}\n      </li>\n    </ul>\n    <button (click)=\"saveHomePageEvents()\">Enregistrer les changements</button>\n  </div>\n  <div *ngSwitchCase=\"'events'\">\n    <h3>Mes Événements</h3>\n    <ul>\n      <li *ngFor=\"let event of events\">\n        <span *ngIf=\"event.isUserEvent\" style=\"color: green;\">(Votre événement)</span>\n        {{ event.name }} - {{ event.date | date:'dd/MM/yyyy HH:mm' }} - {{ event.location }}\n      </li>\n    </ul>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}