{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"../event.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserDashboardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h3\");\n    i0.ɵɵtext(8, \"Mettre \\u00E0 jour les informations\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function UserDashboardComponent_div_4_Template_form_ngSubmit_9_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateUser());\n    });\n    i0.ɵɵelementStart(10, \"label\", 2);\n    i0.ɵɵtext(11, \"Nom d'utilisateur:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function UserDashboardComponent_div_4_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updatedUserInfo.username = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\", 4);\n    i0.ɵɵtext(14, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function UserDashboardComponent_div_4_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updatedUserInfo.email = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 6);\n    i0.ɵɵtext(17, \"Mettre \\u00E0 jour\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Nom d'utilisateur : \", ctx_r0.userInfo.username, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"R\\u00F4le : \", ctx_r0.userInfo.role, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Email : \", ctx_r0.userInfo.email, \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.updatedUserInfo.username);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.updatedUserInfo.email);\n  }\n}\nexport class UserDashboardComponent {\n  constructor(authService, eventService) {\n    this.authService = authService;\n    this.eventService = eventService;\n    this.userInfo = null;\n    this.updatedUserInfo = {};\n    this.currentView = 'profile';\n    this.events = [];\n    this.selectedEvents = [];\n  }\n  ngOnInit() {\n    this.loadUserInfo();\n    this.loadEvents();\n  }\n  loadUserInfo() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(info => {\n        this.userInfo = info;\n        this.updatedUserInfo = {\n          ...info\n        };\n      }, error => {\n        console.error('Erreur lors de la récupération des informations utilisateur', error);\n      });\n    }\n  }\n  updateUser() {\n    if (this.userInfo) {\n      this.authService.updateUser({\n        ...this.userInfo,\n        ...this.updatedUserInfo\n      }).subscribe(response => {\n        console.log('User updated successfully', response);\n        this.userInfo = response;\n      }, error => {\n        if (error.status === 403) {\n          console.error('Access is forbidden: Check your token and user permissions.');\n        } else {\n          console.error('An error occurred:', error);\n        }\n      });\n    }\n  }\n  changeView(view) {\n    this.currentView = view;\n  }\n  loadEvents() {\n    this.eventService.getEvents().subscribe(events => {\n      this.events = events;\n    }, error => {\n      console.error('Erreur lors du chargement des événements', error);\n    });\n  }\n  toggleEventSelection(event) {\n    const index = this.selectedEvents.findIndex(e => e.id === event.id);\n    if (index > -1) {\n      this.selectedEvents.splice(index, 1);\n    } else {\n      this.selectedEvents.push(event);\n    }\n  }\n  saveHomePageEvents() {\n    this.eventService.saveHomePageEvents(this.selectedEvents).subscribe(response => {\n      console.log('Home page events saved successfully', response);\n    }, error => {\n      console.error('Error saving home page events', error);\n    });\n  }\n  static #_ = this.ɵfac = function UserDashboardComponent_Factory(t) {\n    return new (t || UserDashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.EventService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserDashboardComponent,\n    selectors: [[\"app-user-dashboard\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"ngSubmit\"], [\"for\", \"username\"], [\"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function UserDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"user-dashboard works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Tableau de bord utilisateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, UserDashboardComponent_div_4_Template, 18, 5, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.userInfo);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserDashboardComponent_div_4_Template_form_ngSubmit_9_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","updateUser","UserDashboardComponent_div_4_Template_input_ngModelChange_12_listener","$event","ctx_r3","updatedUserInfo","username","UserDashboardComponent_div_4_Template_input_ngModelChange_15_listener","ctx_r4","email","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","userInfo","role","ɵɵproperty","UserDashboardComponent","constructor","authService","eventService","currentView","events","selectedEvents","ngOnInit","loadUserInfo","loadEvents","getUsername","getUserInfo","subscribe","info","error","console","response","log","status","changeView","view","getEvents","toggleEventSelection","event","index","findIndex","e","id","splice","push","saveHomePageEvents","_","ɵɵdirectiveInject","i1","AuthService","i2","EventService","_2","selectors","decls","vars","consts","template","UserDashboardComponent_Template","rf","ctx","ɵɵtemplate","UserDashboardComponent_div_4_Template"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\user-dashboard\\user-dashboard.component.ts","C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\user-dashboard\\user-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { EventService } from '../event.service';\n\ninterface User {\n  id: number;\n  username: string;\n  email: string;\n  role: string;\n}\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n  userInfo: User | null = null;\n  updatedUserInfo: Partial<User> = {};\n  currentView: string = 'profile';\n  events: any[] = [];\n  selectedEvents: any[] = [];\n\n  constructor(\n    private authService: AuthService,\n    private eventService: EventService\n  ) { }\n\n  ngOnInit() {\n    this.loadUserInfo();\n    this.loadEvents();\n  }\n\n  loadUserInfo() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(\n        info => {\n          this.userInfo = info;\n          this.updatedUserInfo = { ...info };\n        },\n        error => {\n          console.error('Erreur lors de la récupération des informations utilisateur', error);\n        }\n      );\n    }\n  }\n\n  updateUser() {\n    if (this.userInfo) {\n      this.authService.updateUser({...this.userInfo, ...this.updatedUserInfo}).subscribe(\n        response => {\n          console.log('User updated successfully', response);\n          this.userInfo = response;\n        },\n        error => {\n          if (error.status === 403) {\n            console.error('Access is forbidden: Check your token and user permissions.');\n          } else {\n            console.error('An error occurred:', error);\n          }\n        }\n      );\n    }\n  }\n\n  changeView(view: string) {\n    this.currentView = view;\n  }\n\n  loadEvents() {\n    this.eventService.getEvents().subscribe(\n      events => {\n        this.events = events;\n      },\n      error => {\n        console.error('Erreur lors du chargement des événements', error);\n      }\n    );\n  }\n\n  toggleEventSelection(event: any) {\n    const index = this.selectedEvents.findIndex(e => e.id === event.id);\n    if (index > -1) {\n      this.selectedEvents.splice(index, 1);\n    } else {\n      this.selectedEvents.push(event);\n    }\n  }\n\n  saveHomePageEvents() {\n    this.eventService.saveHomePageEvents(this.selectedEvents).subscribe(\n      response => {\n        console.log('Home page events saved successfully', response);\n      },\n      error => {\n        console.error('Error saving home page events', error);\n      }\n    );\n  }\n}\n","<p>user-dashboard works!</p>\n<h2>Tableau de bord utilisateur</h2>\n<div *ngIf=\"userInfo\">\n  <p>Nom d'utilisateur : {{ userInfo.username }}</p>\n  <p>Rôle : {{ userInfo.role }}</p>\n  <p>Email : {{ userInfo.email }}</p>\n\n  <h3>Mettre à jour les informations</h3>\n  <form (ngSubmit)=\"updateUser()\">\n    <label for=\"username\">Nom d'utilisateur:</label>\n    <input id=\"username\" [(ngModel)]=\"updatedUserInfo.username\" name=\"username\" required>\n\n    <label for=\"email\">Email:</label>\n    <input id=\"email\" [(ngModel)]=\"updatedUserInfo.email\" name=\"email\" required>\n\n    <button type=\"submit\">Mettre à jour</button>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}