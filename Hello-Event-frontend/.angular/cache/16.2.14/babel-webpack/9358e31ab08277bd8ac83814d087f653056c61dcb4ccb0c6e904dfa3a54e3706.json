{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/common\";\nfunction UserDashboardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Nom d'utilisateur : \", ctx_r0.userInfo.username, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"R\\u00F4le : \", ctx_r0.userInfo.role, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Email : \", ctx_r0.userInfo.email, \"\");\n  }\n}\nexport class UserDashboardComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.updatedUserInfo = {};\n  }\n  ngOnInit() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(info => {\n        this.userInfo = info;\n        this.updatedUserInfo = {\n          ...info\n        }; // Copier les infos utilisateur pour mise à jour\n      }, error => {\n        console.error('Erreur lors de la récupération des informations utilisateur', error);\n      });\n    }\n  }\n  updateUser() {\n    this.authService.updateUser(this.updatedUserInfo).subscribe(updatedUser => {\n      console.log('Informations utilisateur mises à jour', updatedUser);\n      this.userInfo = updatedUser;\n    }, error => {\n      console.error('Erreur lors de la mise à jour des informations utilisateur', error);\n    });\n  }\n  deleteUser() {\n    if (confirm('Êtes-vous sûr de vouloir supprimer votre compte ? Cette action est irréversible.')) {\n      this.authService.deleteUser(this.userInfo.id).subscribe(() => {\n        console.log('Compte utilisateur supprimé');\n        // Rediriger l'utilisateur vers la page de login ou d'accueil après suppression\n      }, error => {\n        console.error('Erreur lors de la suppression du compte utilisateur', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function UserDashboardComponent_Factory(t) {\n    return new (t || UserDashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserDashboardComponent,\n    selectors: [[\"app-user-dashboard\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function UserDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"user-dashboard works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Tableau de bord utilisatuer \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, UserDashboardComponent_div_4_Template, 7, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.userInfo);\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","userInfo","username","role","email","UserDashboardComponent","constructor","authService","updatedUserInfo","ngOnInit","getUsername","getUserInfo","subscribe","info","error","console","updateUser","updatedUser","log","deleteUser","confirm","id","_","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","UserDashboardComponent_Template","rf","ctx","ɵɵtemplate","UserDashboardComponent_div_4_Template","ɵɵproperty"],"sources":["C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\user-dashboard\\user-dashboard.component.ts","C:\\Users\\user\\Desktop\\Nouveau dossier (5)\\Hello-Event-frontend\\src\\app\\user-dashboard\\user-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n  userInfo: any;\n  updatedUserInfo: any = {};\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    const username = this.authService.getUsername();\n    if (username) {\n      this.authService.getUserInfo(username).subscribe(\n        info => {\n          this.userInfo = info;\n          this.updatedUserInfo = { ...info }; // Copier les infos utilisateur pour mise à jour\n        },\n        error => {\n          console.error('Erreur lors de la récupération des informations utilisateur', error);\n        }\n      );\n    }\n  }\n\n  updateUser() {\n    this.authService.updateUser(this.updatedUserInfo).subscribe(\n      updatedUser => {\n        console.log('Informations utilisateur mises à jour', updatedUser);\n        this.userInfo = updatedUser;\n      },\n      error => {\n        console.error('Erreur lors de la mise à jour des informations utilisateur', error);\n      }\n    );\n  }\n\n  deleteUser() {\n    if (confirm('Êtes-vous sûr de vouloir supprimer votre compte ? Cette action est irréversible.')) {\n      this.authService.deleteUser(this.userInfo.id).subscribe(\n        () => {\n          console.log('Compte utilisateur supprimé');\n          // Rediriger l'utilisateur vers la page de login ou d'accueil après suppression\n        },\n        error => {\n          console.error('Erreur lors de la suppression du compte utilisateur', error);\n        }\n      );\n    }\n  }\n}\n","<p>user-dashboard works!</p>\n<h2>Tableau de bord utilisatuer </h2>\n<div *ngIf=\"userInfo\">\n  <p>Nom d'utilisateur : {{ userInfo.username }}</p>\n  <p>Rôle : {{ userInfo.role }}</p>\n  <p>Email : {{ userInfo.email }}</p>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}